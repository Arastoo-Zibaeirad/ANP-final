ANPdata:
- creation_date = "2021/07/31"
- maturity = "production"
- updated_date = "2021/07/31"

ANPrule:
- author = ["Elastic"]

- description = """
    This rule is triggered when indicators from the Threat Intel Filebeat module has a match against local file or network observations."""

- interval = "9m"

- language = "kuery"

- license = "Elastic License v2"

- note = """## Triage and Analysis
    If an indicator matches a local observation, the following enriched fields will be generated to identify the indicator, field, and type matched.
    - `threatintel.indicator.matched.atomic` - this identifies the atomic indicator that matched the local observation
    - `threatintel.indicator.matched.field` - this identifies the indicator field that matched the local observation
    - `threatintel.indicator.matched.type` - this identifies the indicator type that matched the local observation"""

- references = [ "https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-module-threatintel.html"]

- risk_score = 99

- rule_id = "dc672cb7-d5df-4d1f-a6d7-0841b1caafb9"

- severity = "critical"

- tags = ["Elastic", "Windows", "Elastic Endgame", "Network", "Continuous Monitoring", "SecOps", "Monitoring"]

- timeline_id = "495ad7a7-316e-4544-8a0f-9c098daee76e"

- timeline_title = "Generic Threat Match Timeline"

- type = "threat_match"

threat_index = [ "filebeat-*"]
threat_indicator_path = ""
threat_language = "kuery"

threat_query = """
event.module:threatintel and
  (threatintel.indicator.file.hash.*:* or threatintel.indicator.file.pe.imphash:* or threatintel.indicator.ip:* or
     threatintel.indicator.registry.path:* or threatintel.indicator.url.full:*)"""

name: "Threat Intel Filebeat Module Indicator Match"

index: ["auditbeat-*", "endgame-*", "filebeat-*", "logs-*", "packetbeat-*", "winlogbeat-*"]

type: any

kql:
   "query": {"query_string": {"query": "file.hash.*:* or file.pe.imphash:* or source.ip:* or destination.ip:* or url.full:* or registry.path:*"}}

threat:
  - filters:
    - 01:
      - threat_filters_"$state": 
        - store = "appState"
      - threat_filters_meta: 
        - negate = false
        - disabled = false
        - type = "phrase"
        - key = "event.module"
        - params:
          - query = "threatintel"
      - threat_filters_query_match_phrase:
        - "event.module" = "threatintel"

    - 02:
      - threat_filters_"$state": 
        - store = "appState"
      - threat_filters_meta: 
        - negate = false
        - disabled = false
        - type = "phrase"
        - key = "event.category"
        - params:
          - query = "threat"
      - threat_filters_query_match_phrase:
        - "event.module" = "threat"

    - 03:
      - threat_filters_"$state": 
        - store = "appState"
      - threat_filters_meta: 
        - negate = false
        - disabled = false
        - type = "phrase"
        - key = "event.kind"
        - params:
          - query = "enrichment"
      - threat_filters_query_match_phrase:
        - "event.module" = "enrichment"

    - 04:
      - threat_filters_"$state": 
        - store = "appState"
      - threat_filters_meta: 
        - negate = false
        - disabled = false
        - type = "phrase"
        - key = "event.type"
        - params:
          - query = "indicator"
      - threat_filters_query_match_phrase:
        - "event.module" = "indicator"

  - mapping:
    - 01:
      - entries: 
        - field = "file.hash.md5"
        - type = "mapping"
        - value = "threatintel.indicator.file.hash.md5"
    - 02:
      - entries: 
        - field = "file.hash.sha1"
        - type = "mapping"
        - value = "threatintel.indicator.file.hash.sha1"
    - 03:
      - entries: 
        - field = "file.hash.sha256"
        - type = "mapping"
        - value = "threatintel.indicator.file.hash.sha256"
    - 04:
      - entries: 
        - field = "file.hash.imphash"
        - type = "mapping"
        - value = "threatintel.indicator.file.hash.imphash"
    - 05:
      - entries: 
        - field = "source.ip"
        - type = "mapping"
        - value = "threatintel.indicator.ip"
    - 06:
      - entries: 
        - field = "destination.ip"
        - type = "mapping"
        - value = "threatintel.indicator.ip"
    - 07:
      - entries: 
        - field = "url.full"
        - type = "mapping"
        - value = "threatintel.indicator.url.full"

    - 08:
      - entries: 
        - field = "registry.path"
        - type = "mapping"
        - value = "threatintel.indicator.registry.path"

alert:
- "slack"

slack:
slack_webhook_url: "https://hooks.slack.com/services/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"
